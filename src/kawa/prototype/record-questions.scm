
(require alias "alias.scm")
(require base "base.scm")
(require database-utils "database-utils.scm")
(require utils "utils.scm")

(provide 'record-question)

(define-simple-class record-question (base-activity)
  (correct ::Button)
  (pass ::Button)
  (incorrect ::Button)
  (student-name ::TextView)
  (student-window ::cursor-window)
  (random ::Random)
  (student-num)
  (student-cursor ::SQLCursor)
  (class-num ::int)
  (discussion-num ::int)
  ((random-student)
   (let ((num (*:next-int random (student-cursor:get-count))))
     (set! student-num (*:get-int student-window num (student-cursor:get-column-index student-data:C_ID)))
     (student-name:set-text
      (string-append
       (*:get-string student-window num (student-cursor:get-column-index (mk-sql 'name)))
       ", "
       (*:get-string student-window num (student-cursor:get-column-index (mk-sql 'eid)))))))
  ((onDestroy)
   (invoke-special ActivityGroup (this) 'onDestroy)
   (close-discussion ((this):get-db) discussion-num))
  ((onCreate (saved-instance-state ::Bundle))
   (invoke-special base-activity (this) 'onCreate saved-instance-state)
   (Activity:setContentView (this) R$layout:record_question)
   (set! class-num (*:get-int-extra (*:get-intent (this)) (mk-extra record-question 'class) -1))
   (set! discussion-num (*:get-int-extra (*:get-intent (this)) (mk-extra record-quention 'discussion) -1))
   (Log:d "Prototype" class-num)
   (set! random (java.util.Random)) 
   (set! student-name (Activity:find-view-by-id (this) R$id:textRecordStudentName))
   (set! correct (Activity:find-view-by-id (this) R$id:buttonRecordCorrect))
   (set! incorrect (Activity:find-view-by-id (this) R$id:buttonRecordIncorrect))
   (set! pass (Activity:find-view-by-id (this) R$id:buttonRecordPass))
   (set! student-cursor (students ((this):get-db) class-num))
   (set! student-window (cursor-window "mine"))
   (student-cursor:set-window student-window)
   (when (> class-num -1) (random-student))
   (when (= discussion-num -1)
	 (set! discussion-num (open-discussion ((this):get-db) class-num)))
   (correct:set-on-click-listener
    (lambda (v)
      (add-to-log ((this):app:get-db) student-num class-num discussion-num 'correct)
      (random-student)
      (Log:d "*****prototype*****" "a button was pressed")))
   (incorrect:set-on-click-listener
    (lambda (v)
      (add-to-log ((this):app:get-db) student-num class-num discussion-num 'incorrect)
      (random-student)
      (Log:d "*****prototype*****" "a button was pressed")))
   (pass:set-on-click-listener
    (lambda (v)
      (add-to-log ((this):app:get-db) student-num class-num discussion-num 'pass)
      (random-student)
      (Log:d "*****prototype*****" "a button was pressed")))))
